{"version":3,"sources":["components/Footer/Footer.module.css","util.jsx","components/InfoBox/InfoBox.jsx","util2.jsx","components/TotalBox/TotalBox.jsx","action/index.js","components/LeafletMap/LeafletMap.jsx","components/Rate/Rate.jsx","components/Country/Country.jsx","components/WorldTotal/WorldTotal.jsx","components/Home/Home.jsx","components/Footer/Footer.jsx","App.js","reducers/fetchCountryData.js","reducers/CountryUpdate.js","reducers/CountriesReducer.js","reducers/CountryUpdateReducer.js","reducers/getWorldwideDataReducer.js","reducers/index.js","Store.js","index.js","components/Country/Country.module.css","components/InfoBox/InfoBox.module.css","components/Rate/Rate.module.css","components/Home/Home.module.css","components/LeafletMap/LeafletMap.module.css","components/WorldTotal/WorldTotal.module.css","components/TotalBox/TotalBox.module.css","assets/notify.svg"],"names":["module","exports","findColor","title","opaque","selectType","cases","color","multiplier","deaths","confirmed","recovered","DateAndValueFormatter","type","numeral","length","format","date","Intl","DateTimeFormat","year","month","day","formatToParts","value","dateFormat","Date","textCapitalizeFormatter","text","first","split","toUpperCase","second","splice","join","final","push","numeralFormat","num","InfoBox","sub","total","update","useState","option","setOption","data","setData","useEffect","map","item","labels","datasets","label","fill","borderColor","lineTension","pointBackgroundColor","backgroundColor","responsive","legend","display","fontSize","fontFamily","boxWidth","scales","xAxes","time","parser","tooltipFormat","yAxes","ticks","callback","index","gridLines","className","cx","styles","container","icon","faVirusSlash","faSkull","faVirus","faClinicMedical","getIcon","toLowerCase","graph","options","checkDifferenceBetweenNewAndOldCases","timeline","caseType","lastDataPoint","key","DATE","newDataPoint","getNewData","countries","active","country","flag","countryInfo","iso3","lat","lng","long","TotalBox","useSelector","state","countryData","PH","dispatch","useDispatch","a","axios","get","payload","days","getCountryUpdate","LeafletMap","select","setSelect","Map","center","zoom","maxZoom","minZoom","TileLayer","url","attribution","listItems","Circle","radius","Math","sqrt","fillColor","Popup","src","alt","name","marker","heading","faGlobeAsia","id","onChange","e","target","Rate","setFinalStoreDate","finalValue","setFinalStoreValue","custom","CountryUpdateAction","i","undefined","forceIterateState","scaleBeginAtZero","offsetGridLines","style","graphContainer","graphContainer__block","Country","numbers","sort","b","reverse","numberInDescendingOrder","lists","lists_heading","countries__countries","countries__cases","WorldTotal","worldwide","affectedCountries","todayCases","todayDeaths","todayRecovered","population","Home","showcase","showcase__heading","showcase__button","guideContainer","guide","guide__heading","guide__lists","guide__button","href","Notify","world","worldReminder","world__heading","world__description","world__link","donation","donationContainer","left","donation__heading","right","right__button","Footer","main","about","about__lists","about__social","faFacebookSquare","faTwitter","faInstagram","faLinkedin","quickLinks","quick__lists","newsletter","newsletter__form","placeholder","faEnvelope","App","initialState","fetchCountryData","action","CountryUpdate","allCases","getChartData","dataPoint","CountriesReducer","CountryUpdateReducer","getWorldwideDataReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89dcfb4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__32lUj\",\"main\":\"Footer_main__abZYJ\",\"about__social\":\"Footer_about__social__cnVo6\",\"newsletter__form\":\"Footer_newsletter__form__x6HIK\",\"about\":\"Footer_about__2P8Sr\",\"quickLinks\":\"Footer_quickLinks__1b0X6\",\"newsletter\":\"Footer_newsletter__3_kdH\"};","import React from 'react'\r\nimport numeral from 'numeral'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faVirusSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport { faSkull } from '@fortawesome/free-solid-svg-icons'\r\nimport { faVirus } from '@fortawesome/free-solid-svg-icons'\r\nimport { faClinicMedical } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const getIcon = (title) => {\r\n    if(title === 'Recovered') {\r\n        return <FontAwesomeIcon icon={faVirusSlash}/>\r\n    }\r\n    if(title === 'Deaths') {\r\n        return <FontAwesomeIcon icon={faSkull}/>\r\n    }\r\n    if(title === 'Confirmed') {\r\n        return <FontAwesomeIcon icon={faVirus}/>\r\n    }\r\n    if(title === 'Cases') {\r\n        return <FontAwesomeIcon icon={faClinicMedical}/>\r\n    }\r\n}\r\n\r\nexport const findColor = (title, opaque = 1) => {\r\n    if(title === 'Deaths') {\r\n        return `rgb(230,1,5, ${opaque})`\r\n    }\r\n    if(title === 'Cases') {\r\n        return `rgb(0,123,189, ${opaque})`\r\n    }\r\n    if(title === 'Recovered') {\r\n        return `rgba(44,187,1,${opaque})`\r\n    }\r\n}\r\n\r\nexport const selectType = {\r\n    cases: {\r\n        color: 'rgba(0,0,255,.5)',\r\n        multiplier: 800\r\n    },\r\n    deaths: {\r\n        color: 'rgba(255,0,0,.5)',\r\n        multiplier: 900\r\n    },\r\n    confirmed: {\r\n        color: 'gray',\r\n        multiplier: 1000\r\n    },\r\n    recovered: {\r\n        color: 'rgba(0,255,0,.5)',\r\n        multiplier: 1100\r\n    }\r\n}\r\n\r\nexport const forceIterateState = (value, state) => {\r\n    let final = {\r\n        date: [],\r\n        value: []\r\n    }\r\n    for(let i=0; i<value; i++) {\r\n        if(state[i] !== undefined) {\r\n            let value = state[i].value\r\n            let date = state[i].date\r\n\r\n            final.date.push(date);\r\n            final.value.push(value);\r\n        }\r\n    }\r\n    return final;\r\n}\r\n\r\nexport const DateAndValueFormatter = (type) => {\r\n\r\n    function dateFormat(date) {\r\n       \r\n        const dateTimeFormat = new Intl.DateTimeFormat('en', { year: 'numeric', month: 'short', day: '2-digit' }) \r\n        const [{ value: month },,{ value: day },,{ value: year }] = dateTimeFormat.formatToParts(date) \r\n        \r\n        return `${month} ${day}, ${year }`\r\n    }\r\n\r\n    if(type) {\r\n        return numeral(type[type.length - 1]).format('0,0');\r\n    } \r\n    return dateFormat(new Date());\r\n    \r\n}\r\n\r\nexport const textCapitalizeFormatter = (text) => {\r\n    let first= text.split(\"\")[0].toUpperCase();\r\n    let second = text.split(\"\").splice(1).join(\"\");\r\n\r\n    let final = [];\r\n    final.push(first, second)\r\n    \r\n    return final.join(\"\")\r\n}\r\n\r\nexport const numberInDescendingOrder = (data) => {\r\n    let numbers = [...data];\r\n    let final = [];\r\n    numbers.map(num => {\r\n        return final.push(num.cases)\r\n    })\r\n    final.sort((a,b) => a-b).reverse();\r\n    \r\n    return final;\r\n}\r\n\r\nexport const numeralFormat = (num) => {\r\n    return numeral(num).format('0,0')\r\n}","import React, {useState, useEffect} from 'react'\r\nimport styles from './InfoBox.module.css'\r\nimport cx from 'classnames'\r\nimport numeral from 'numeral'\r\nimport {Line} from 'react-chartjs-2'\r\n\r\nimport {getIcon} from '../../util'\r\nimport {findColor} from '../../util'\r\n\r\nconst InfoBox = ({title, sub, total, update}) => {\r\n\r\n    const [option, setOption] = useState({})\r\n    const [data, setData] = useState({})\r\n\r\n    useEffect(() => {\r\n        if(update) {\r\n            const value = [...update].map(item => item.value);\r\n            const date = [...update].map(item => item.date);\r\n            \r\n            const data = {\r\n                labels: date,\r\n                datasets: [\r\n                    {\r\n                        label: title,\r\n                        data: value,\r\n                        fill: true,\r\n                        borderColor: findColor(title),\r\n                        lineTension: .4,\r\n                        pointBackgroundColor: findColor(title, .5),\r\n                        backgroundColor: findColor(title, .2)\r\n                    }, \r\n                ]\r\n            }\r\n\r\n            setData(data)\r\n        }\r\n\r\n        const option = {\r\n            responsive: true,\r\n            legend: {\r\n                display: true,\r\n                labels: {\r\n                    fontSize: 15,\r\n                    fontFamily: \"'Raleway', 'sans-serif'\",\r\n                    boxWidth: 20\r\n                }\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true, //this will remove all the x-axis grid lines\r\n                    type: \"time\",\r\n                    time: {\r\n                        parser: \"MM/DD/YY\",\r\n                        tooltipFormat: \"ll\",\r\n                    },\r\n                }],\r\n                yAxes: [\r\n                    {\r\n                        display: true, //this will remove all the x-axis grid lines\r\n                        ticks: {\r\n                            callback: function(value, index, labels) {\r\n                                return numeral(value).format(\"0a\");\r\n                            }\r\n                        },\r\n                        gridLines: {\r\n                            display: false,\r\n                        },\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n        setOption(option)\r\n    }, [update])\r\n\r\n\r\n    return (\r\n        <div className={cx(styles.container, title)} >\r\n            {title? <h6>\r\n                {getIcon(title)}\r\n                Total {title.toLowerCase()}\r\n            </h6> : null }\r\n            <div className={styles.total}>\r\n                <span>\r\n                    {total > 1000000 ? numeral(total).format('+0.000a') : numeral(total).format('0,0')}\r\n                </span>\r\n                {sub ? <h4 className={styles.sub}>currenly {sub} <br/> in the philippines <br/> </h4> : null}\r\n            </div>\r\n            \r\n            <div className={styles.graph}>\r\n                {update ? <Line options={option} data={data}/> : null}\r\n            </div>\r\n            {/* <span style={{fontSize: \".5rem\"}}>Source: disease.sh - Open Disease Data</span> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","export const checkDifferenceBetweenNewAndOldCases = (timeline, caseType) => {\r\n    let final = [];\r\n    let lastDataPoint;\r\n    for(let key in timeline[caseType]) {\r\n        const DATE = key;\r\n        const value = timeline[caseType][DATE];\r\n        // HOW TO CHECK LAST DATE AND CURRENT DATE\r\n        // CHECKING IF OUR KEY EXIST\r\n        // HOW TO CHECK  NEW KEYS AND OLD KEYS TO GET THE DIFFERENCE\r\n        if(lastDataPoint) {\r\n            const newDataPoint = {\r\n                date: DATE,\r\n                value: value - lastDataPoint\r\n            }\r\n            final.push(newDataPoint);\r\n        }\r\n        lastDataPoint = timeline[caseType][DATE]\r\n    }\r\n\r\n    return final\r\n}\r\n\r\nexport const getNewData = (countries) => {\r\n    let data = [];\r\n    for(let type in countries) {\r\n        const caseType = {\r\n            cases: countries[type].cases,\r\n            deaths: countries[type].deaths,\r\n            recovered: countries[type].recovered,\r\n            confirmed: countries[type].active,\r\n            country: countries[type].country,\r\n            flag: countries[type].countryInfo.flag,\r\n            iso3: countries[type].countryInfo.iso3,\r\n            lat: countries[type].countryInfo.lat,\r\n            lng: countries[type].countryInfo.long\r\n        }\r\n        data.push(caseType)\r\n    }\r\n    return data;\r\n}","import React, { useEffect } from 'react'\r\nimport styles from './TotalBox.module.css'\r\n\r\nimport InfoBox from '../InfoBox/InfoBox'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {getCountryData, getCountryUpdate} from '../../action'\r\nconst TotalBox = () => {\r\n   \r\n    // PH CURRENT DATA\r\n    const {cases, active, deaths, recovered} = useSelector(state => state.countryData.PH)\r\n\r\n    // PH UPDATE STATE\r\n    const {state} = useSelector(state => state.update)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getCountryData())\r\n        dispatch(getCountryUpdate(10))\r\n\r\n    }, [cases, active, deaths, recovered])\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            {/* <InfoBox total={active} sub=\"confirmed cases\"></InfoBox> */}\r\n            <InfoBox title=\"Cases\" total={cases} update={ state ? state.cases : null} ></InfoBox>\r\n        \r\n            <InfoBox title=\"Deaths\" total={deaths} update={ state ? state.deaths : null} ></InfoBox>\r\n            <InfoBox title=\"Recovered\" total={recovered} update={ state ? state.recovered : null} ></InfoBox>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TotalBox\r\n","import axios from 'axios'\r\nimport {checkDifferenceBetweenNewAndOldCases} from '../util2'\r\n\r\nexport const getWorldwideData = () => async dispatch => {\r\n    const {data} = await axios.get('https://disease.sh/v3/covid-19/all');\r\n    dispatch({\r\n        type: 'FETCH_WORLDWIDE_DATA',\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const getCountryData = () => async dispatch => {\r\n    const {data} = await axios.get('https://disease.sh/v3/covid-19/countries/philippines');\r\n    \r\n    dispatch({\r\n        type: 'FETCH_COUNTRY_DATA',\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const getCountryUpdate = (days = 20) => async dispatch => {\r\n    const {data} = await axios.get(`https://disease.sh/v3/covid-19/historical/philippines?lastdays=${days}`)\r\n    dispatch({\r\n        type: 'FETCH_COUNTRY_UPDATE',\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const getCountries = () => async dispatch => {\r\n    const {data} = await axios.get('https://disease.sh/v3/covid-19/countries');\r\n    \r\n    dispatch({\r\n        type: 'FETCH_COUNTRIES',\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const CountryUpdateAction = (days = 50, caseType=\"cases\") => async dispatch => {\r\n    const {data} = await axios.get(`https://disease.sh/v3/covid-19/historical/philippines?lastdays=${days}`)\r\n    const timeline = data.timeline;\r\n    \r\n    const final = checkDifferenceBetweenNewAndOldCases(timeline, caseType.toLowerCase())\r\n    dispatch({\r\n        type: 'FETCH_COUNTRY_UPDATE_CUSTOM',\r\n        payload: final\r\n    })\r\n}","import React, {useEffect, useState} from 'react'\r\nimport styles from './LeafletMap.module.css'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGlobeAsia } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { Map, Circle, Popup, TileLayer } from 'react-leaflet'\r\nimport numeral from 'numeral'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {getCountries} from '../../action/index'\r\n\r\nimport {selectType} from '../../util'\r\n\r\nconst LeafletMap = () => {\r\n    const [select, setSelect] = useState(\"cases\")\r\n    const dispatch = useDispatch();\r\n    const countries = useSelector(state => state.countries.state)\r\n    const position = [12.8797, 121.7740]\r\n\r\n    useEffect(() => {\r\n        dispatch(getCountries())        \r\n    }, [select])\r\n    \r\n    // THIS CODE GOT ME IN A HOLE. \r\n    //Rendering Multiple Components\r\n    const marker = (data, type = \"cases\") => {\r\n        if(data) {\r\n            const listItems = [...data].map(country => (\r\n                <Circle key={country.country} center={[country.lat, country.lng]} radius={Math.sqrt(country[type]) * selectType[type].multiplier} fillColor={selectType[type].color} color={selectType[type].color}>\r\n                    <Popup className=\"popup\">\r\n                        <img className=\"img-popup\" src={country.flag} alt={country.name}/>\r\n                        <span className=\"country\">{country.country}</span>\r\n            <h6 className=\"total\">{country[type] > 1000000 ? numeral(country[type]).format('+0.000a') : numeral(country[type]).format('+0,0')}</h6>\r\n                    </Popup>\r\n                </Circle>\r\n            ))\r\n            return (\r\n                <div>{listItems}</div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    const map = (\r\n        <Map center={position} zoom={5} maxZoom={8} minZoom={3}>\r\n            <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n            \r\n            />\r\n            {marker(countries, select)}\r\n        </Map>\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.heading}>\r\n                <h6>\r\n                    <FontAwesomeIcon icon={faGlobeAsia}/>\r\n                    Global map cases\r\n                    </h6>\r\n                <select className={styles.option} name=\"select\" id=\"select\" value={select} onChange={e=>setSelect(e.target.value)}>\r\n                    <option value=\"cases\">All</option>\r\n                    <option value=\"recovered\">Recovered</option>\r\n                    <option value=\"deaths\">Deaths</option>\r\n                    <option value=\"confirmed\">Confirmed</option>\r\n                </select>\r\n            </div>\r\n            {countries ? map : <div>Loading...</div>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeafletMap\r\n","import React, { useEffect, useState } from 'react'\r\nimport styles from './Rate.module.css'\r\nimport {Bar} from 'react-chartjs-2'\r\n\r\nimport numeral from 'numeral'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {CountryUpdateAction} from '../../action'\r\n\r\nimport {forceIterateState, findColor, DateAndValueFormatter, textCapitalizeFormatter} from '../../util.jsx'\r\n\r\nconst Rate = () => {\r\n    const [option, setOption] = useState({})\r\n    const [data, setData] = useState({})\r\n    const value = 60;\r\n\r\n    const [select, setSelect] = useState(\"Cases\");\r\n    const [finalDate, setFinalStoreDate] = useState([])\r\n    const [finalValue, setFinalStoreValue] = useState([])\r\n\r\n    const dispatch = useDispatch()\r\n    const state = useSelector(state => state.custom)\r\n    \r\n    useEffect(() => {\r\n        dispatch(CountryUpdateAction(value, select))\r\n    }, [select])\r\n\r\n    useEffect(() => {\r\n        if(state) {\r\n            const final = forceIterateState(value, state);\r\n            setFinalStoreDate(final.date);\r\n            setFinalStoreValue(final.value)\r\n            const data = {\r\n                labels: final.date,\r\n                datasets: [\r\n                    {\r\n                        label: textCapitalizeFormatter(select),\r\n                        data: final.value,\r\n                        backgroundColor: findColor(textCapitalizeFormatter(select), 1)\r\n                    }\r\n                ],\r\n            }\r\n            const option = {\r\n                responsive: true,\r\n                scaleBeginAtZero: true,\r\n                scales: {\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            display: false,\r\n                            offsetGridLines: true\r\n                        },\r\n                        type: \"time\",\r\n                        time: {\r\n                            parser: \"MM/DD/YY\",\r\n                            tooltipFormat: \"ll\",\r\n                        },\r\n                    }],\r\n                    yAxes: [\r\n                        {\r\n                            display: true, //this will remove all the x-axis grid lines\r\n                            ticks: {\r\n                                callback: function(value, index, labels) {\r\n                                    return numeral(value).format(\"0a\");\r\n                                }\r\n                            },\r\n                            gridLines: {\r\n                                display: false,\r\n                            },\r\n                        }\r\n                    ]\r\n                }\r\n                \r\n            }\r\n            setOption(option)\r\n            setData(data)\r\n        }\r\n        \r\n    }, [state, select])\r\n\r\n    const display = (select) => {\r\n        if(select === \"Cases\") {\r\n            return \" confirmed cases\"\r\n        } return \" \"+select.toLowerCase() + \" cases\"\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            \r\n            <div className={styles.graph}>\r\n                <div>\r\n                    <h2>As of {DateAndValueFormatter()}, there have been new&nbsp; \r\n                    <span style={{color: `${findColor(textCapitalizeFormatter(select))}`}}>{DateAndValueFormatter(finalValue)} </span>\r\n                    {display(select)} <br/>of COVID-19 in the Philippines</h2>\r\n                    <select onChange={e=> setSelect(e.target.value)}>\r\n                        <option value=\"cases\">Cases</option>\r\n                        <option value=\"recovered\">Recovered</option>\r\n                        <option value=\"deaths\">Deaths</option>\r\n                    </select>\r\n                </div>\r\n                <div className={styles.graphContainer}>\r\n                    <Bar options={option} data={data}></Bar>\r\n                    <div className={styles.graphContainer__block}>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rate\r\n","import React from 'react'\r\nimport styles from './Country.module.css'\r\nimport numeral from 'numeral'\r\nimport {useSelector } from 'react-redux'\r\n\r\nimport {numberInDescendingOrder} from '../../util'\r\nconst Country = () => {\r\n    const countries = useSelector(state => state.countries.state)\r\n\r\n    if(!countries) return null;\r\n    const num = numberInDescendingOrder(countries);\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.lists}>\r\n                <h2 className={styles.lists_heading}>All Countries affected by COVID-19 Cases</h2>\r\n                <table className={styles.countries}>\r\n                    <tbody>\r\n                        {countries.map((country, index) => {\r\n                            return(\r\n                                <tr key={index}>\r\n                                    <td className={styles.countries__countries}>{country.country}</td>\r\n                                    <td className={styles.countries__cases}>{numeral(num[index]).format('0,0')}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country\r\n","import React, { useEffect } from 'react'\r\nimport styles from './WorldTotal.module.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {getWorldwideData} from '../../action'\r\n\r\nimport {numeralFormat} from '../../util'\r\n\r\nconst WorldTotal = () => {\r\n    const worldwide = useSelector(state => state.worldwide)\r\n    const {active, cases, deaths, recovered, \r\n        affectedCountries, todayCases, \r\n        todayDeaths, todayRecovered, population} = worldwide\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getWorldwideData())\r\n        \r\n    }, [])\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.total}>\r\n                <h2>Worldwide Total</h2>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Total COVID-19 cases</td>\r\n                            <td>{numeralFormat(cases)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Total confirmed</td>\r\n                            <td>{numeralFormat(active)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Total deaths</td>\r\n                            <td>{numeralFormat(deaths)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Total recovered</td>\r\n                            <td>{numeralFormat(recovered)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Total number of affected countries</td>\r\n                            <td>{numeralFormat(affectedCountries)}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className={styles.update}>\r\n                <h2>Todays update</h2>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Cases today</td>\r\n                            <td>{numeralFormat(todayCases)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>All deaths today</td>\r\n                            <td>{numeralFormat(todayDeaths)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>All recovered cases today</td>\r\n                            <td>{numeralFormat(todayRecovered)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Population</td>\r\n                            <td>{numeralFormat(population)}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorldTotal\r\n","import React from 'react'\r\nimport styles from './Home.module.css'\r\n\r\nimport {TotalBox, WorldTotal, Rate, LeafletMap, Country, Footer} from '../../components'\r\n\r\nimport Notify from '../../assets/notify.svg'\r\nimport { useSelector} from 'react-redux'\r\n\r\nimport {numeralFormat} from '../../util'\r\nconst Home = () => {\r\n    const {active} = useSelector(state => state.countryData.PH)\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.showcase}>\r\n                <span>Data may be incomplete for the current day or week.</span>\r\n                <h1 className={styles.showcase__heading}>There have been&nbsp; \r\n                <span className={styles.active}>{active? numeralFormat(active) : null}</span><br></br> \r\n                confirmed cases in the Philippines</h1>\r\n                <div>\r\n                    <button className={styles.showcase__button}>learn more</button>\r\n                </div>\r\n            </div>\r\n            <TotalBox />\r\n            <div className={styles.guideContainer}>\r\n                <div className={styles.guide}>\r\n                    <h2 className={styles.guide__heading}>How to protect yourself<br></br> from COVID-19</h2>\r\n                    <ul className={styles.guide__lists}>\r\n                        <li>Stay at home as much as you can</li>\r\n                        <li>Keep a safe distance</li>\r\n                        <li>Wash hands often</li>\r\n                        <li>Cover your cough</li>\r\n                        <li>If you're sick, call ahead</li>\r\n                    </ul>\r\n                    <button className={styles.guide__button}> \r\n                        <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019/advice-for-public\" target=\"_blank\">\r\n                        More info\r\n                        </a>\r\n                    </button>\r\n                </div>  \r\n                <img src={Notify} alt=\"undraw.co\"/>\r\n            </div>\r\n            <div className={styles.world}>\r\n                <WorldTotal></WorldTotal>\r\n                <div className={styles.worldReminder}>\r\n                    <h2 className={styles.world__heading}>Quick reminder</h2>\r\n                    <p className={styles.world__description}>Wear a cloth face covering to cover your mouth and nose when around others and when you must go out in public.</p>\r\n                    <a className={styles.world__link} href=\"https://www.redcross.org/get-help/how-to-prepare-for-emergencies/types-of-emergencies/coronavirus-safety\" target=\"_blank\">Learn more</a>\r\n                </div>\r\n            </div>\r\n            <div className={styles.donation}>\r\n                <div className={styles.donationContainer}>\r\n                    <div className={styles.left}>\r\n                        <h2 className={styles.donation__heading}>Find the site helpful?</h2>\r\n                        <p>Please consider fueling it by donating a small amount to help with the server hosting costs. Every penny received will be spent for the site's maintenance.</p>\r\n                    </div>\r\n                    <div className={styles.right}>\r\n                        <button className={styles.right__button}>buy coffe</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={styles.graphContainer}>\r\n                <Rate></Rate>\r\n            </div>\r\n            <div className={styles.map}>\r\n                <LeafletMap></LeafletMap>\r\n                <Country></Country>\r\n            </div>\r\n            <Footer></Footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport styles from './Footer.module.css'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faFacebookSquare, faLinkedin, faTwitter, faInstagram} from '@fortawesome/free-brands-svg-icons'\r\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons'\r\nconst Footer = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.main}>\r\n                <div className={styles.about}>\r\n                    <h4>Solo, Inc</h4>\r\n                    <ul className={styles.about__lists}>\r\n                        <li>Purok 4, Brgy. Sara</li>\r\n                        <li>9200, Iligan City</li>\r\n                        <li>Call: 0926 833 9430</li>\r\n                    </ul>\r\n                    <div className={styles.about__social}>\r\n                        <FontAwesomeIcon icon={faFacebookSquare}></FontAwesomeIcon>\r\n                        <FontAwesomeIcon icon={faTwitter}></FontAwesomeIcon>\r\n                        <FontAwesomeIcon icon={faInstagram}></FontAwesomeIcon>\r\n                        <FontAwesomeIcon icon={faLinkedin}></FontAwesomeIcon>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.quickLinks}>\r\n                    <h4>Quick Links</h4>\r\n                    <ul className={styles.quick__lists}>\r\n                        <li>Development</li>\r\n                        <li>About</li>\r\n                        <li>Contact</li>\r\n                        <li>Map</li>\r\n                        <li>Blogs</li>\r\n                    </ul>\r\n                </div>\r\n                <div className={styles.quickLinks}>\r\n                    <h4>Quick Links</h4>\r\n                    <ul className={styles.quick__lists}>\r\n                        <li>Development</li>\r\n                        <li>About</li>\r\n                        <li>Contact</li>\r\n                        <li>Map</li>\r\n                        <li>Blogs</li>\r\n                    </ul>\r\n                </div>\r\n                <div className={styles.newsletter}>\r\n                    <h4>Newsletter</h4>\r\n                    <p>Lorem ipsum dolor sit amet consectetur <br></br> adipisicing elit. Eos, ratione.</p>\r\n                    <form className={styles.newsletter__form}>\r\n                        <input type=\"email\" placeholder=\"Enter email\"/>\r\n                        <div>\r\n                        <button type=\"submit\">\r\n                            <FontAwesomeIcon icon={faEnvelope}></FontAwesomeIcon>\r\n                        </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <footer>\r\n                <p>All rights reserved 2020</p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\nimport './App.css';\n\nimport {Home} from './components'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Home></Home>\n      <div className=\"dividier\"></div>\n      \n    </div>  \n  );\n}\n\nexport default App;\n","const initialState = {\r\n    PH: {}\r\n};\r\nconst fetchCountryData = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_COUNTRY_DATA': {\r\n            return {\r\n                ...state,\r\n                PH: action.payload\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default fetchCountryData\r\n","const initialState = {};\r\n\r\nconst CountryUpdate = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_COUNTRY_UPDATE': {\r\n            const {timeline: {recovered, deaths, cases}} = action.payload;\r\n            \r\n            const allCases = {\r\n                cases: [],\r\n                deaths: [],\r\n                recovered: [],\r\n                // active: []\r\n            }\r\n\r\n            const getChartData = (data, type) => {\r\n                for(let key in data) {\r\n                    const dataPoint = {\r\n                        date: key,\r\n                        value: data[key]\r\n                    }\r\n                    type.push(dataPoint)            \r\n                }\r\n                \r\n            }\r\n\r\n            getChartData(cases, allCases.cases)\r\n            getChartData(deaths, allCases.deaths)\r\n            getChartData(recovered, allCases.recovered)\r\n            //getChartData(recovered, allCases.active)\r\n            \r\n            return {\r\n                ...state,\r\n                state: allCases\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }    \r\n}\r\n\r\nexport default CountryUpdate","import {getNewData} from '../util2'\r\n\r\nconst initialState = [];\r\n\r\nconst CountriesReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_COUNTRIES': {\r\n            const data = getNewData(action.payload)\r\n            return {\r\n                ...state,\r\n                state: data\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default CountriesReducer","const initialState = {\r\n\r\n}\r\n\r\nconst CountryUpdateReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        \r\n        case 'FETCH_COUNTRY_UPDATE_CUSTOM':\r\n            return { ...state, ...payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default CountryUpdateReducer","const initialState = {\r\n\r\n}\r\n\r\nconst getWorldwideDataReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case 'FETCH_WORLDWIDE_DATA':\r\n            return { ...state, ...payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default getWorldwideDataReducer\r\n","import {combineReducers} from 'redux'\r\n\r\nimport fetchCountryData from './fetchCountryData'\r\nimport CountryUpdate from './CountryUpdate'\r\nimport CountriesReducer from './CountriesReducer'\r\nimport CountryUpdateReducer from './CountryUpdateReducer'\r\nimport getWorldwideDataReducer from './getWorldwideDataReducer'\r\n\r\nexport default combineReducers({\r\n    countryData: fetchCountryData,\r\n    update: CountryUpdate,\r\n    countries: CountriesReducer,\r\n    custom: CountryUpdateReducer,\r\n    worldwide: getWorldwideDataReducer\r\n})","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport {Provider} from 'react-redux'\nimport store from './Store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Country_container__3Q_4M\",\"lists\":\"Country_lists__2bMEw\",\"countries\":\"Country_countries__3HL5R\",\"lists_heading\":\"Country_lists_heading__1fNDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"InfoBox_container__f40ju\",\"graph\":\"InfoBox_graph__3LVpO\",\"total\":\"InfoBox_total__2yYA3\",\"sub\":\"InfoBox_sub__2Widn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Rate_container__AeJ9Z\",\"graph\":\"Rate_graph__2cBmj\",\"graphContainer\":\"Rate_graphContainer__153C0\",\"graphContainer__block\":\"Rate_graphContainer__block__38V9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__mRUjI\",\"showcase\":\"Home_showcase__2TmFP\",\"active\":\"Home_active__3kEJw\",\"showcase__heading\":\"Home_showcase__heading__2Y0zd\",\"showcase__button\":\"Home_showcase__button__Wo2XZ\",\"guideContainer\":\"Home_guideContainer__qiyY9\",\"guide\":\"Home_guide__3Y4Ym\",\"guide__heading\":\"Home_guide__heading__2YlSz\",\"guide__lists\":\"Home_guide__lists__3IDzw\",\"guide__button\":\"Home_guide__button__38U4m\",\"world\":\"Home_world__2Pmhe\",\"worldReminder\":\"Home_worldReminder__3Sw5Q\",\"world__heading\":\"Home_world__heading__3R0vJ\",\"world__link\":\"Home_world__link__3xedi\",\"donation\":\"Home_donation__1EOIP\",\"donationContainer\":\"Home_donationContainer__3BoDx\",\"left\":\"Home_left__3kCsk\",\"right\":\"Home_right__cfk-6\",\"right__button\":\"Home_right__button__3QrY4\",\"donation__heading\":\"Home_donation__heading__2D4jb\",\"graphContainer\":\"Home_graphContainer__3nviP\",\"map\":\"Home_map__3M9MC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LeafletMap_container__3aado\",\"heading\":\"LeafletMap_heading__naUfH\",\"option\":\"LeafletMap_option__3UzY-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WorldTotal_container__azkk0\",\"total\":\"WorldTotal_total__1Vzsb\",\"update\":\"WorldTotal_update__2kV0D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TotalBox_container__PYGFr\"};","module.exports = __webpack_public_path__ + \"static/media/notify.58ccc6ac.svg\";"],"sourceRoot":""}